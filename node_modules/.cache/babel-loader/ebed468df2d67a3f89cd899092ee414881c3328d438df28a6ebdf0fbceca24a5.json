{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\weather-app\\\\src\\\\Components\\\\ForecastDia.js\";\nimport { Rain } from \"../Images/svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastDia = ({\n  weatherData\n}) => {\n  //console.log(weatherData);\n\n  const forecast = weatherData[0].forecast.forecastday;\n  const getDayLabel = date => {\n    const today = new Date().toDateString();\n    const forecastDate = new Date(date).toDateString();\n    console.log(today, forecastDate);\n  };\n  //console.log(forecast);\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"flex-1 flex flex-row items-center justify-center px-4 md:px-6 overflow-x-auto w-screen m-auto rounded-md no-scrollbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex flex-auto justify-center gap-2 w-full\",\n      children: forecast.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center gap-2 hover:scale-110 transition-transform duration-300 ease-in-out mt-5 mb-5 min-w-52\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium transition-colors\",\n          children: [getDayLabel(day.date), day.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: day.day.condition.icon,\n          alt: day.day.condition.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: [weatherData[1] === \"c\" ? day.day.mintemp_c : day.day.mintemp_f, \"\\xB0 / \", weatherData[1] === \"c\" ? day.day.maxtemp_c : day.day.maxtemp_f, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-normal text-center min-h-8 transition-colors\",\n          children: day.day.condition.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-1 text-sm font-normal text-center transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(Rain, {\n            prop: weatherData[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), \" \", day.day.daily_chance_of_rain, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, day.date_epoch, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ForecastDia;\nexport default ForecastDia;\nvar _c;\n$RefreshReg$(_c, \"ForecastDia\");","map":{"version":3,"names":["Rain","jsxDEV","_jsxDEV","ForecastDia","weatherData","forecast","forecastday","getDayLabel","date","today","Date","toDateString","forecastDate","console","log","className","children","map","day","fileName","_jsxFileName","lineNumber","columnNumber","src","condition","icon","alt","text","mintemp_c","mintemp_f","maxtemp_c","maxtemp_f","prop","daily_chance_of_rain","date_epoch","_c","$RefreshReg$"],"sources":["C:/Users/HOME/Documents/weather-app/src/Components/ForecastDia.js"],"sourcesContent":["import { Rain } from \"../Images/svg\";\r\n\r\nconst ForecastDia = ({ weatherData }) => {\r\n  //console.log(weatherData);\r\n\r\n  const forecast = weatherData[0].forecast.forecastday;\r\n\r\n  const getDayLabel = (date) => {\r\n    const today = new Date().toDateString();\r\n    const forecastDate = new Date(date).toDateString();\r\n\r\n    console.log(today, forecastDate);\r\n  };\r\n  //console.log(forecast);\r\n\r\n  return (\r\n    <aside className=\"flex-1 flex flex-row items-center justify-center px-4 md:px-6 overflow-x-auto w-screen m-auto rounded-md no-scrollbar\">\r\n      <div className=\"mt-4 flex flex-auto justify-center gap-2 w-full\">\r\n        {forecast.map((day) => (\r\n          <div\r\n            key={day.date_epoch}\r\n            className=\"flex flex-col items-center justify-center gap-2 hover:scale-110 transition-transform duration-300 ease-in-out mt-5 mb-5 min-w-52\"\r\n          >\r\n            <div className=\"text-sm font-medium transition-colors\">\r\n              {getDayLabel(day.date)}\r\n              {day.date}\r\n            </div>\r\n            <img\r\n              src={day.day.condition.icon}\r\n              alt={day.day.condition.text}\r\n            ></img>\r\n            <div className=\"text-lg font-bold\">\r\n              {weatherData[1] === \"c\" ? day.day.mintemp_c : day.day.mintemp_f}°\r\n              / {weatherData[1] === \"c\" ? day.day.maxtemp_c : day.day.maxtemp_f}\r\n              °\r\n            </div>\r\n            <div className=\"text-sm font-normal text-center min-h-8 transition-colors\">\r\n              {day.day.condition.text}\r\n            </div>\r\n            <div className=\"flex flex-1 text-sm font-normal text-center transition-colors\">\r\n              <Rain prop={weatherData[2]} /> {day.day.daily_chance_of_rain} %\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\nexport default ForecastDia;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}