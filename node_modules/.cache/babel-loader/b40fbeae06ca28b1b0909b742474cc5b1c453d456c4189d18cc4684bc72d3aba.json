{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst coordsSlice = createSlice({\n  name: \"coords\",\n  initialState: {\n    value: []\n  },\n  reducers: {\n    setCoords: (state, action) => {\n      state.value = action.payload;\n      //console.log(state.value);\n    }\n  }\n});\nconst citiesSlice = createSlice({\n  name: \"saveCities\",\n  initialState: {\n    value: []\n  },\n  reducers: {\n    setSaveCities: (state, action) => {\n      state.value = [...state.value, action.payload];\n      console.log(state.value);\n    },\n    removeSaveCities: (state, action) => {\n      const index = state.value.indexOf(action.payload);\n      if (index > -1) {\n        // only splice array when item is found\n        state.value.splice(index, 1); // 2nd parameter means remove one item only\n      }\n    }\n  }\n});\nexport const {\n  setCoords\n} = coordsSlice.actions;\nexport const {\n  setSaveCities,\n  removeSaveCities\n} = citiesSlice.actions;\nexport const coordsReducer = coordsSlice.reducer;\nexport const citiesReducer = citiesSlice.reducer;","map":{"version":3,"names":["createSlice","coordsSlice","name","initialState","value","reducers","setCoords","state","action","payload","citiesSlice","setSaveCities","console","log","removeSaveCities","index","indexOf","splice","actions","coordsReducer","reducer","citiesReducer"],"sources":["C:/Users/HOME/Documents/weather-app/src/redux/reducers.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst coordsSlice = createSlice({\r\n  name: \"coords\",\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setCoords: (state, action) => {\r\n      state.value = action.payload;\r\n      //console.log(state.value);\r\n    },\r\n  },\r\n});\r\nconst citiesSlice = createSlice({\r\n  name: \"saveCities\",\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setSaveCities: (state, action) => {\r\n      state.value = [...state.value, action.payload];\r\n      console.log(state.value);\r\n    },\r\n    removeSaveCities: (state, action) => {\r\n      const index = state.value.indexOf(action.payload);\r\n      if (index > -1) { // only splice array when item is found\r\n        state.value.splice(index, 1); // 2nd parameter means remove one item only\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCoords } = coordsSlice.actions;\r\nexport const { setSaveCities, removeSaveCities } = citiesSlice.actions;\r\n\r\nexport const coordsReducer = coordsSlice.reducer;\r\nexport const citiesReducer = citiesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO;MAC5B;IACF;EACF;AACF,CAAC,CAAC;AACF,MAAMC,WAAW,GAAGV,WAAW,CAAC;EAC9BE,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRM,aAAa,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACH,KAAK,GAAG,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEI,MAAM,CAACC,OAAO,CAAC;MAC9CG,OAAO,CAACC,GAAG,CAACN,KAAK,CAACH,KAAK,CAAC;IAC1B,CAAC;IACDU,gBAAgB,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAMO,KAAK,GAAGR,KAAK,CAACH,KAAK,CAACY,OAAO,CAACR,MAAM,CAACC,OAAO,CAAC;MACjD,IAAIM,KAAK,GAAG,CAAC,CAAC,EAAE;QAAE;QAChBR,KAAK,CAACH,KAAK,CAACa,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;MAChC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAU,CAAC,GAAGL,WAAW,CAACiB,OAAO;AAChD,OAAO,MAAM;EAAEP,aAAa;EAAEG;AAAiB,CAAC,GAAGJ,WAAW,CAACQ,OAAO;AAEtE,OAAO,MAAMC,aAAa,GAAGlB,WAAW,CAACmB,OAAO;AAChD,OAAO,MAAMC,aAAa,GAAGX,WAAW,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}