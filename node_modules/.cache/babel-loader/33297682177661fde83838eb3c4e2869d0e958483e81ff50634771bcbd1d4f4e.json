{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Main from \"./Components/Main\";\nimport ForecastHora from \"./Components/ForecastHora\";\nimport ForecastDia from \"./Components/ForecastDia\";\nimport Alerta from \"./Components/Alerta\";\nimport Loading from \"./Components/Loading\";\nimport db from \"./db.json\";\nimport { fetchWeatherData } from \"./Services/Weather\";\nimport Header from \"./Components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Component = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [data, setCurrentData] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [coords, setCoords] = useState([-25.3007, -57.6359]);\n  const [originalCoords, setOriginalCoords] = useState([]);\n  const [units, setUnist] = useState(\"c\");\n  const [forecast, setForecast] = useState(\"d\");\n\n  // Obtener la ubicación del usuario\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error);\n    } else {\n      console.log(\"Geolocalización no soportada\");\n    }\n    function success(position) {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const userCoords = [latitude, longitude];\n      setCoords(userCoords);\n      setOriginalCoords(userCoords);\n    }\n    function error() {\n      console.log(\"No se pudo recuperar la ubicación\");\n    }\n  }, []);\n\n  // Obtener los datos meteorológicos actuales\n  useEffect(() => {\n    if (coords.length === 2) {\n      fetchWeatherData(coords[0], coords[1], units).then(data => {\n        setCurrentData(data);\n        //console.log(data)\n        setLoaded(true);\n      }).catch(error => console.error(error));\n    }\n  }, [coords, units]);\n\n  // Función para buscar una ciudad por nombre\n  const findCityByName = nombreCiudad => {\n    return db.ciudades.filter(ciudad => ciudad.nombre.toLowerCase() === nombreCiudad.toLowerCase());\n  };\n\n  // Manejar la búsqueda de ciudades\n  const handleSearch = e => {\n    const searchValue = e.target.value;\n    const results = findCityByName(searchValue);\n    if (results.length > 0) {\n      const {\n        lat,\n        lon\n      } = results[0];\n      setCoords([lat, lon]);\n    } else {\n      setCoords(originalCoords);\n    }\n  };\n\n  // Alternar el modo oscuro\n  const handleDarkmode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  // Alternar el sistema de unidades\n  const handleUnits = () => {\n    setUnist(units === \"c\" ? \"f\" : \"c\");\n  };\n  // Alternar el tipo de forecast\n  const handleForecast = () => {\n    setForecast(forecast === \"d\" ? \"h\" : \"d\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col w-full h-screen transition-colors ${isDarkMode ? \"bg-gray-900 text-white\" : \"bg-white text-gray-900\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      handleDarkmode: handleDarkmode,\n      units: units,\n      handleUnits: handleUnits,\n      forecast: forecast,\n      handleForecast: handleForecast,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid center place-content-evenly h-full w.-f\",\n      children: [/*#__PURE__*/_jsxDEV(Main, {\n        weatherData: [data, units, isDarkMode]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), data.alerts.alert[0] ? /*#__PURE__*/_jsxDEV(Alerta, {\n        weatherData: [data, isDarkMode]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), forecast === \"d\" ? /*#__PURE__*/_jsxDEV(ForecastDia, {\n        weatherData: [data, units, isDarkMode]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(ForecastHora, {\n        weatherData: [data, units, isDarkMode]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"flex justify-center items-center min-h-8 px-4 border-t shrink-0 md:px-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 dark:text-gray-400\",\n        children: [\"Hecho por Federico Ver\\xF3n y Jorge Ozuna. A base de la API\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.weatherapi.com/\",\n          title: \"Free Weather API\",\n          className: \"hover:text-gray-200\",\n          children: \"WeatherAPI.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Component, \"SxQP41suX8DtuUkSz0jbNcNqgpI=\");\n_c = Component;\nexport default Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"names":["useState","useEffect","Main","ForecastHora","ForecastDia","Alerta","Loading","db","fetchWeatherData","Header","jsxDEV","_jsxDEV","Component","_s","isDarkMode","setIsDarkMode","data","setCurrentData","loaded","setLoaded","coords","setCoords","originalCoords","setOriginalCoords","units","setUnist","forecast","setForecast","navigator","geolocation","getCurrentPosition","success","error","console","log","position","latitude","longitude","userCoords","length","then","catch","findCityByName","nombreCiudad","ciudades","filter","ciudad","nombre","toLowerCase","handleSearch","e","searchValue","target","value","results","lat","lon","handleDarkmode","handleUnits","handleForecast","className","children","fileName","_jsxFileName","lineNumber","columnNumber","weatherData","alerts","alert","href","title","_c","$RefreshReg$"],"sources":["C:/Users/HOME/Documents/weather-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Main from \"./Components/Main\";\r\nimport ForecastHora from \"./Components/ForecastHora\";\r\nimport ForecastDia from \"./Components/ForecastDia\";\r\nimport Alerta from \"./Components/Alerta\";\r\nimport Loading from \"./Components/Loading\";\r\nimport db from \"./db.json\";\r\nimport { fetchWeatherData } from \"./Services/Weather\";\r\nimport Header from \"./Components/Header\";\r\n\r\nconst Component = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n  const [data, setCurrentData] = useState(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [coords, setCoords] = useState([-25.3007, -57.6359]);\r\n  const [originalCoords, setOriginalCoords] = useState([]);\r\n  const [units, setUnist] = useState(\"c\");\r\n  const [forecast, setForecast] = useState(\"d\");\r\n\r\n  // Obtener la ubicación del usuario\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(success, error);\r\n    } else {\r\n      console.log(\"Geolocalización no soportada\");\r\n    }\r\n\r\n    function success(position) {\r\n      const { latitude, longitude } = position.coords;\r\n      const userCoords = [latitude, longitude];\r\n      setCoords(userCoords);\r\n      setOriginalCoords(userCoords);\r\n    }\r\n\r\n    function error() {\r\n      console.log(\"No se pudo recuperar la ubicación\");\r\n    }\r\n  }, []);\r\n\r\n  // Obtener los datos meteorológicos actuales\r\n  useEffect(() => {\r\n    if (coords.length === 2) {\r\n      fetchWeatherData(coords[0], coords[1], units)\r\n        .then((data) => {\r\n          setCurrentData(data);\r\n          //console.log(data)\r\n          setLoaded(true);\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  }, [coords, units]);\r\n\r\n  // Función para buscar una ciudad por nombre\r\n  const findCityByName = (nombreCiudad) => {\r\n    return db.ciudades.filter(\r\n      (ciudad) => ciudad.nombre.toLowerCase() === nombreCiudad.toLowerCase()\r\n    );\r\n  };\r\n\r\n  // Manejar la búsqueda de ciudades\r\n  const handleSearch = (e) => {\r\n    const searchValue = e.target.value;\r\n    const results = findCityByName(searchValue);\r\n\r\n    if (results.length > 0) {\r\n      const { lat, lon } = results[0];\r\n      setCoords([lat, lon]);\r\n    } else {\r\n      setCoords(originalCoords);\r\n    }\r\n  };\r\n\r\n  // Alternar el modo oscuro\r\n  const handleDarkmode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n  // Alternar el sistema de unidades\r\n  const handleUnits = () => {\r\n    setUnist(units === \"c\" ? \"f\" : \"c\");\r\n  };\r\n  // Alternar el tipo de forecast\r\n  const handleForecast = () => {\r\n    setForecast(forecast === \"d\" ? \"h\" : \"d\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`flex flex-col w-full h-screen transition-colors ${\r\n        isDarkMode ? \"bg-gray-900 text-white\" : \"bg-white text-gray-900\"\r\n      }`}\r\n    >\r\n      <Header\r\n        isDarkMode={isDarkMode}\r\n        handleDarkmode={handleDarkmode}\r\n        units={units}\r\n        handleUnits={handleUnits}\r\n        forecast={forecast}\r\n        handleForecast={handleForecast}\r\n        handleSearch={handleSearch}\r\n      />\r\n      {loaded ? (\r\n        <div className=\"grid center place-content-evenly h-full w.-f\">\r\n          <Main weatherData={[data, units, isDarkMode]} />\r\n          {data.alerts.alert[0] ? (\r\n            <Alerta weatherData={[data, isDarkMode]} />\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {forecast === \"d\" ? (\r\n            <ForecastDia weatherData={[data, units, isDarkMode]} />\r\n          ) : (\r\n            <ForecastHora weatherData={[data, units, isDarkMode]} />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n      <footer className=\"flex justify-center items-center min-h-8 px-4 border-t shrink-0 md:px-6\">\r\n        <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n          Hecho por Federico Verón y Jorge Ozuna. A base de la API{\" \"}\r\n          <a\r\n            href=\"https://www.weatherapi.com/\"\r\n            title=\"Free Weather API\"\r\n            className=\"hover:text-gray-200\"\r\n          >\r\n            WeatherAPI.com\r\n          </a>\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}