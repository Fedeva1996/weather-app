{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\weather-app\\\\src\\\\Components\\\\Ciudades.js\";\nimport { Rain, SunRise, SunSet } from \"../Images/svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ciudades = ({\n  weatherData\n}) => {\n  //console.log(weatherData);\n\n  const forecast = weatherData[0].forecast.forecastday;\n  const getDayLabel = date => {\n    const today = new Date();\n    const forecastDate = new Date(date);\n    forecastDate.setDate(forecastDate.getDate() + 1);\n\n    // Asegurarse de que solo se comparen las fechas sin las horas\n    today.setHours(0, 0, 0, 0);\n    forecastDate.setHours(0, 0, 0, 0);\n    const diffTime = forecastDate.getTime() - today.getTime();\n    const diffDays = Math.round(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays === 0) return \"Hoy\";\n    if (diffDays === 1) return \"Mañana\";\n    if (diffDays === 2) return \"Pasado\";\n    return forecastDate.toLocaleDateString(\"es-ES\", {\n      weekday: \"long\"\n    });\n  };\n  //console.log(forecast);\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"flex-1 flex flex-row items-center justify-center overflow-x-auto w-[90%] m-auto rounded-md no-scrollbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex flex-auto gap-2 w-full\",\n      children: forecast.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center gap-2 hover:scale-110 transition-transform duration-300 ease-in-out mt-5 mb-5 min-w-52\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium transition-colors\",\n          children: getDayLabel(day.date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: day.day.condition.icon,\n          alt: day.day.condition.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: [weatherData[1] === \"c\" ? day.day.mintemp_c : day.day.mintemp_f, \"\\xB0 / \", weatherData[1] === \"c\" ? day.day.maxtemp_c : day.day.maxtemp_f, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-1 text-xs font-normal text-center min-h-8 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(SunRise, {\n            prop: weatherData[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"content-center ml-1 mr-1\",\n            children: day.astro.sunrise\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SunSet, {\n            prop: weatherData[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"content-center ml-1 mr-1\",\n            children: day.astro.sunset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-normal text-center min-h-8 transition-colors\",\n          children: day.day.condition.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-1 text-sm font-normal text-center transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(Rain, {\n            prop: weatherData[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \" \", day.day.daily_chance_of_rain, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, day.date_epoch, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Ciudades;\nexport default Ciudades;\nvar _c;\n$RefreshReg$(_c, \"Ciudades\");","map":{"version":3,"names":["Rain","SunRise","SunSet","jsxDEV","_jsxDEV","Ciudades","weatherData","forecast","forecastday","getDayLabel","date","today","Date","forecastDate","setDate","getDate","setHours","diffTime","getTime","diffDays","Math","round","toLocaleDateString","weekday","className","children","map","day","fileName","_jsxFileName","lineNumber","columnNumber","src","condition","icon","alt","text","mintemp_c","mintemp_f","maxtemp_c","maxtemp_f","prop","astro","sunrise","sunset","daily_chance_of_rain","date_epoch","_c","$RefreshReg$"],"sources":["C:/Users/HOME/Documents/weather-app/src/Components/Ciudades.js"],"sourcesContent":["import { Rain, SunRise, SunSet } from \"../Images/svg\";\r\n\r\nconst Ciudades = ({ weatherData }) => {\r\n  //console.log(weatherData);\r\n\r\n  const forecast = weatherData[0].forecast.forecastday;\r\n\r\n  const getDayLabel = (date) => {\r\n    const today = new Date();\r\n    const forecastDate = new Date(date);\r\n    forecastDate.setDate(forecastDate.getDate() + 1);\r\n\r\n    // Asegurarse de que solo se comparen las fechas sin las horas\r\n    today.setHours(0, 0, 0, 0);\r\n    forecastDate.setHours(0, 0, 0, 0);\r\n\r\n    const diffTime = forecastDate.getTime() - today.getTime();\r\n    const diffDays = Math.round(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffDays === 0) return \"Hoy\";\r\n    if (diffDays === 1) return \"Mañana\";\r\n    if (diffDays === 2) return \"Pasado\";\r\n    return forecastDate.toLocaleDateString(\"es-ES\", { weekday: \"long\" });\r\n  };\r\n  //console.log(forecast);\r\n\r\n  return (\r\n    <aside className=\"flex-1 flex flex-row items-center justify-center overflow-x-auto w-[90%] m-auto rounded-md no-scrollbar\">\r\n      <div className=\"mt-4 flex flex-auto gap-2 w-full\">\r\n        {forecast.map((day) => (\r\n          <div\r\n            key={day.date_epoch}\r\n            className=\"flex flex-col items-center justify-center gap-2 hover:scale-110 transition-transform duration-300 ease-in-out mt-5 mb-5 min-w-52\"\r\n          >\r\n            <div className=\"text-sm font-medium transition-colors\">\r\n              {getDayLabel(day.date)}\r\n            </div>\r\n            <img\r\n              src={day.day.condition.icon}\r\n              alt={day.day.condition.text}\r\n            ></img>\r\n            <div className=\"text-lg font-bold\">\r\n              {weatherData[1] === \"c\" ? day.day.mintemp_c : day.day.mintemp_f}°\r\n              / {weatherData[1] === \"c\" ? day.day.maxtemp_c : day.day.maxtemp_f}\r\n              °\r\n            </div>\r\n            <div className=\"flex flex-1 text-xs font-normal text-center min-h-8 transition-colors\">\r\n              <SunRise prop={weatherData[2]} />\r\n              <p className=\"content-center ml-1 mr-1\">{day.astro.sunrise}</p>\r\n              <SunSet prop={weatherData[2]} />\r\n              <p className=\"content-center ml-1 mr-1\">{day.astro.sunset}</p>\r\n            </div>\r\n            <div className=\"text-sm font-normal text-center min-h-8 transition-colors\">\r\n              {day.day.condition.text}\r\n            </div>\r\n            <div className=\"flex flex-1 text-sm font-normal text-center transition-colors\">\r\n              <Rain prop={weatherData[2]} /> {day.day.daily_chance_of_rain} %\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\nexport default Ciudades;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}