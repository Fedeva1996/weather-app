{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Documents\\\\weather-app\\\\src\\\\Components\\\\Forecast.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forecast = ({\n  coordenadas\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  console.log(coordenadas);\n  useEffect(() => {\n    if (coordenadas.length === 2) {\n      const getWeather = async () => {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast/?lat=${coordenadas[0]}&lon=${coordenadas[1]}&appid=${process.env.REACT_APP_API_KEY}&units=metric&lang=es`);\n        const data = await response.json();\n        setWeatherData(data.list);\n        console.log(data);\n      };\n      getWeather();\n    }\n  }, [coordenadas]);\n  const data = weatherData.slice(0, 11);\n  const grupedData = Object.groupBy(data, ({\n    dt_txt\n  }) => dt_txt);\n  console.log(grupedData);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"flex-1 flex flex-row items-center justify-center px-4 md:px-6 overflow-x-auto w-[80%] m-auto rounded-md no-scrollbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 flex flex-auto gap-4 w-full\",\n      children: Object.entries(grupedData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center gap-3 ml-1 hover:scale-110 transition-all duration-300 ease-in-out mt-5 mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium\",\n          children: key.slice(10, 13) > 12 ? `0${key.slice(10, 13) - 12} p.m.` : `${key.slice(10, 13)} a.m.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${value[0].weather[0].icon}@2x.png`,\n          alt: value[0].weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: [value[0].main.temp, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-normal text-gray-300\",\n          children: value[0].weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Forecast, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Forecast","coordenadas","_s","weatherData","setWeatherData","console","log","length","getWeather","response","fetch","process","env","REACT_APP_API_KEY","data","json","list","slice","grupedData","Object","groupBy","dt_txt","className","children","entries","map","key","value","fileName","_jsxFileName","lineNumber","columnNumber","src","weather","icon","alt","description","main","temp","_c","$RefreshReg$"],"sources":["C:/Users/HOME/Documents/weather-app/src/Components/Forecast.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst Forecast = ({coordenadas}) => {\r\n  const [weatherData, setWeatherData] = useState([]);\r\n  console.log(coordenadas)\r\n  useEffect(() => {\r\n    if (coordenadas.length === 2) {\r\n      const getWeather = async () => {\r\n        const response = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/forecast/?lat=${coordenadas[0]}&lon=${coordenadas[1]}&appid=${process.env.REACT_APP_API_KEY}&units=metric&lang=es`\r\n        );\r\n        const data = await response.json();\r\n        setWeatherData(data.list);\r\n        console.log(data);\r\n      };\r\n\r\n      getWeather();\r\n    }\r\n  }, [coordenadas]);\r\n\r\n  const data = weatherData.slice(0, 11);\r\n  const grupedData = Object.groupBy(data, ({ dt_txt }) => dt_txt);\r\n  console.log(grupedData);\r\n  return (\r\n    <aside className=\"flex-1 flex flex-row items-center justify-center px-4 md:px-6 overflow-x-auto w-[80%] m-auto rounded-md no-scrollbar\">\r\n      <div className=\"mt-8 flex flex-auto gap-4 w-full\">\r\n        {Object.entries(grupedData).map(([key, value]) => (\r\n          <div\r\n            key={key}\r\n            className=\"flex flex-col items-center gap-3 ml-1 hover:scale-110 transition-all duration-300 ease-in-out mt-5 mb-5\"\r\n          >\r\n            <div className=\"text-sm font-medium\">\r\n              {key.slice(10, 13) > 12\r\n                ? `0${key.slice(10, 13) - 12} p.m.`\r\n                : `${key.slice(10, 13)} a.m.`}\r\n            </div>\r\n            <img\r\n              src={`https://openweathermap.org/img/wn/${value[0].weather[0].icon}@2x.png`}\r\n              alt={value[0].weather[0].description}\r\n            ></img>\r\n            <div className=\"text-lg font-bold\">{value[0].main.temp}Â°</div>\r\n            <div className=\"text-sm font-normal text-gray-300\">\r\n              {value[0].weather[0].description}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\nexport default Forecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}